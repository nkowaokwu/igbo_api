import React from 'react';
import * as Chakra from '../../node_modules/@chakra-ui/react';

export const Tooltip = ({ children }: { children: any }) => <>{children}</>;
export const {
  Box,
  Drawer,
  DrawerBody,
  DrawerContent,
  DrawerFooter,
  DrawerHeader,
  DrawerOverlay,
  Center,
  Square,
  Container,
  Flex,
  Grid,
  GridItem,
  SimpleGrid,
  Link,
  Stack,
  Select,
  Wrap,
  HStack,
  VStack,
  Button,
  Checkbox,
  CheckboxGroup,
  Radio,
  RadioGroup,
  RangeSlider,
  RangeSliderTrack,
  RangeSliderFilledTrack,
  RangeSliderThumb,
  Slider,
  SliderTrack,
  SliderFilledTrack,
  SliderThumb,
  SliderMark,
  Switch,
  Textarea,
  Input,
  InputGroup,
  InputLeftElement,
  InputRightElement,
  Code,
  Badge,
  Divider,
  Tag,
  TagLabel,
  TagLeftIcon,
  TagRightIcon,
  TagCloseButton,
  PinInput,
  PinInputField,
  Progress,
  CircularProgress,
  CircularProgressLabel,
  List,
  ListItem,
  ListIcon,
  OrderedList,
  UnorderedList,
  Heading,
  // Tooltip,
  Skeleton,
  Stat,
  StatLabel,
  StatNumber,
  StatHelpText,
  AccordionButton,
  Accordion,
  AccordionIcon,
  AccordionItem,
  AccordionPanel,
  Spinner,
  Tabs,
  TabList,
  TabPanel,
  TabPanels,
  Tab,
  Text,
  Image,
  Icon,
  IconButton,
  Hide,
  Fade,
  SlideFade,
  FormControl,
  FormLabel,
  AlertDialog,
  AlertDialogBody,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogContent,
  AlertDialogOverlay,
  Menu,
  MenuButton,
  MenuList,
  MenuItem,
  MenuItemOption,
  MenuGroup,
  MenuOptionGroup,
  MenuDivider,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
  Popover,
  PopoverTrigger,
  PopoverContent,
  PopoverHeader,
  PopoverBody,
  PopoverFooter,
  PopoverArrow,
  PopoverCloseButton,
  PopoverAnchor,
  Show,
  Avatar,
  AvatarBadge,
  AvatarGroup,
  Portal,
  PortalManager,
  forwardRef,
  popperCSSVars,
  VisuallyHidden,
  useBreakpoint,
  useDisclosure,
  usePopover,
  usePrevious,
  useStyleConfig,
  useTheme,
  useToast,
  chakra,
  extendTheme,
  ChakraProvider,
} = Chakra;

export const useBreakpointValue = (breakpoints: any) => Object.values(breakpoints)[0];

export default Chakra;
