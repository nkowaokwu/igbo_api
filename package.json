{
  "name": "igbo-api",
  "version": "1.61.2",
  "description": "Igbo Dictionary API contains Igbo words, definitions, and examples",
  "author": "Ijemma Onwuzulike",
  "main": "server.js",
  "scripts": {
    "build": "rm -rf dist/ && yarn build:site && yarn build:src && cross-env NODE_ENV=build yarn build:dictionaries && yarn build:functions",
    "build:functions": "rm -rf functions/src && shx cp -r ./dist ./functions/src && shx cp -r ./dist/dictionaries/ig-en ./functions/src/dictionaries",
    "build:src": "babel -d dist/ ./src -s --extensions '.js,.jsx,.ts,.tsx'",
    "build:dictionaries:ig:en": "[ ! -d \"./dist/dictionaries\" ] && shx mkdir ./dist/dictionaries || echo '' && [ ! -d \"./dist/dictionaries/ig-en\" ] && shx mkdir ./dist/dictionaries/ig-en || echo 'Igbo to English dictionaries dir already exists'",
    "build:dictionaries:en:ig": "[ ! -d \"./dist/dictionaries\" ] && shx mkdir ./dist/dictionaries || echo '' && [ ! -d \"./dist/dictionaries/en-ig\" ] && shx mkdir ./dist/dictionaries/en-ig || echo 'English to Igbo dictionaries dir already exists'",
    "prebuild:dictionaries": "yarn build:dictionaries:ig:en && yarn build:dictionaries:en:ig && shx cp -r ./src/dictionaries/ig-en ./dist/dictionaries && shx cp -r ./src/dictionaries/en-ig ./dist/dictionaries",
    "build:dictionaries": "node dist/dictionaries/buildDictionaries.js",
    "build:site": "cross-env NEXT_PUBLIC_GA_ID=$GA_TRACKING_ID next build && yarn build:fonts && yarn build:assets",
    "build:fonts": "shx cp -r ./src/public/fonts/ ./dist/fonts",
    "build:assets": "shx cp -r ./src/pages/assets/ ./dist/assets",
    "start:emulators": "node_modules/.bin/firebase emulators:start --only functions,hosting",
    "start:watch": "nodemon --watch './src' --ext ts,js,tsx,jsx  --ignore './functions' --verbose --exec yarn build",
    "clean": "shx rm -rf node_modules/ dist/ out/ yarn.lock package-lock.json *.log",
    "predev": "firebase functions:config:set runtime.env=development && firebase use staging",
    "dev": "npm-run-all -p start:watch start:emulators start:database",
    "predev:full": "firebase functions:config:set env.redis_url=redis://localhost:6379 env.replica_set=true env.redis_status=true",
    "dev:full": "npm-run-all -p start:watch start:emulators start:database:replica",
    "migrate-up": "migrate-mongo up",
    "migrate-down": "migrate-mongo down",
    "mongodump": "shx rm -rf dump/ && mongodump -d igbo_api -o dump",
    "jest": "cross-env NODE_ENV=test jest --forceExit",
    "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
    "cypress": "cross-env NODE_ENV=test npm-run-all -p start start:database cypress:open",
    "cypress:ci": "cross-env NODE_ENV=test npm-run-all -p -r start cypress:run",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "precommit": "lint-staged",
    "prestart:database": "[ ! -d \"./db\" ] && shx mkdir ./db || echo 'Database directory exists'",
    "prestart:database:replica": "[ ! -d \"./mongos\" ] && shx mkdir ./mongos || echo 'Parent database directory exists'",
    "prestart:database:primary": "[ ! -d \"./mongos/db1\" ] && shx mkdir ./mongos/db1 || echo 'Primary database directory exists'",
    "prestart:database:secondary:first": "[ ! -d \"./mongos/db2\" ] && shx mkdir ./mongos/db2 || echo 'First secondary database directory exists'",
    "prestart:database:secondary:second": "[ ! -d \"./mongos/db3\" ] && shx mkdir ./mongos/db3 || echo 'Second secondary database directory exists'",
    "start": "node ./dist/server.js",
    "start:docker": "docker-compose up",
    "test:build": "cross-env NODE_ENV=build yarn start",
    "dev:site": "firebase functions:config:set runtime.env=development && next",
    "start:database": "mongod --port 27017 --dbpath ./db --quiet &>/dev/null",
    "start:database:replica": "npm-run-all -p start:database:primary start:database:secondary:first start:database:secondary:second",
    "start:database:primary": "mongod --port 2717 --dbpath ./mongos/db1 --replSet rs0 --quiet",
    "start:database:secondary:first": "mongod --port 2727 --dbpath ./mongos/db2 --replSet rs0 --quiet",
    "start:database:secondary:second": "mongod --port 2737 --dbpath ./mongos/db3 --replSet rs0 --quiet",
    "test": "npm-run-all -p -r start:database jest"
  },
  "engines": {
    "node": ">=18",
    "npm": "8",
    "yarn": "1.22.x"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run precommit",
      "commit-msg": "npm run commit-msg"
    }
  },
  "lint-staged": {
    "*.{js,ts}": [
      "./node_modules/.bin/prettier --write",
      "./node_modules/.bin/eslint"
    ]
  },
  "license": "ISC",
  "dependencies": {
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.12.3",
    "@babel/node": "^7.10.5",
    "@babel/plugin-syntax-jsx": "^7.12.1",
    "@babel/plugin-transform-runtime": "^7.11.5",
    "@babel/preset-env": "^7.12.1",
    "@babel/preset-react": "^7.12.7",
    "@babel/preset-typescript": "^7.21.5",
    "@babel/runtime": "^7.20.6",
    "@chakra-ui/icons": "^1.1.1",
    "@chakra-ui/react": "^1.7.4",
    "@emotion/react": "^11",
    "@emotion/styled": "^11",
    "@fortawesome/fontawesome": "^1.1.8",
    "@fortawesome/fontawesome-free-regular": "^5.0.13",
    "@fortawesome/fontawesome-free-solid": "^5.0.13",
    "@fortawesome/fontawesome-svg-core": "^1.2.36",
    "@fortawesome/free-solid-svg-icons": "^5.15.4",
    "@fortawesome/react-fontawesome": "^0.1.16",
    "@material-ui/core": "^4.11.0",
    "@sendgrid/mail": "^7.4.0",
    "@testing-library/cypress": "^7.0.3",
    "antd": "^4.14.0",
    "autoprefixer": "^9.8.6",
    "axios": "^0.21.1",
    "bcrypt": "^5.0.0",
    "body-parser": "^1.19.0",
    "chalk": "^4.1.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "diacriticless": "^1.0.1",
    "dotenv": "^16.0.3",
    "express": "^4.17.1",
    "express-rate-limit": "^5.2.3",
    "firebase": "9.16.0",
    "firebase-admin": "10.3.0",
    "firebase-functions": "3.19.0",
    "firebase-tools": "11.18.0",
    "framer-motion": "^5",
    "i18next": "^21.6.5",
    "joi": "^17.4.0",
    "lodash": "^4.17.20",
    "migrate-mongo": "^8.1.4",
    "mongoose": "^6.7.0",
    "morgan": "^1.10.0",
    "next": "13.4.5",
    "next-i18next": "10.1.0",
    "next-react-svg": "1.1.3",
    "nextra": "2.2.14",
    "nextra-theme-docs": "2.2.14",
    "node-cron": "^2.0.3",
    "nodemon": "^2.0.4",
    "npm-run-all": "^4.1.5",
    "prop-types": "^15.7.2",
    "query-string": "^7.0.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-fade-in": "^1.1.1",
    "react-hook-form": "^6.13.1",
    "react-i18next": "^11.15.3",
    "react-json-pretty": "^2.2.0",
    "react-reveal": "^1.2.2",
    "react-scroll": "^1.8.1",
    "redis": "^4.3.1",
    "rimraf": "^3.0.2",
    "shelljs": "^0.8.4",
    "shx": "^0.3.3",
    "string-similarity": "^4.0.2",
    "tailwindcss": "3",
    "typescript": "^5.1.3",
    "unicharadata": "^9.0.0-alpha.6",
    "uuid": "^8.3.2",
    "yarn": "^1.22.10"
  },
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/commit-analyzer": "^8.0.1",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/npm": "^7.0.10",
    "@semantic-release/release-notes-generator": "^9.0.1",
    "@types/node": "^20.3.0",
    "@types/react": "^18.2.11",
    "@typescript-eslint/eslint-plugin": "^5.59.6",
    "@typescript-eslint/parser": "^5.59.6",
    "babel-loader": "^8.1.0",
    "cross-env": "^7.0.2",
    "cypress": "^12.14.0",
    "eslint": "8.34.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-next": "13.1.6",
    "eslint-config-prettier": "8.6.0",
    "eslint-plugin-cypress": "2.12.1",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-jsx-a11y": "6.7.1",
    "eslint-plugin-react": "7.32.2",
    "husky": "^4.3.0",
    "jest": "^29.2.2",
    "lint-staged": "^10.4.0",
    "postcss": "^8.1.3",
    "postcss-loader": "~3.0.0",
    "postcss-preset-env": "^6.7.0",
    "prettier": "2.8.8",
    "supertest": "^6.3.1"
  },
  "standard-version": {
    "skip": {
      "changelog": true,
      "tag": true
    }
  },
  "resolutions": {
    "esquery": "1.4.0"
  },
  "nodemonConfig": {
    "delay": "1500ms"
  }
}
